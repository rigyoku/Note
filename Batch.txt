Batch[批处理]: 由dos或者windows操作系统内嵌的解释器[COMMAND.COM/CMD.EXE]解释运行. 运行时先整体扫描,然后逐行执行,到文件尾部或者exit退出或者异常退出.
echo显示当前回显设置. echo [on/off]开关回显. echo xx输出msg. echo xx >> PATH输出msg到指定文件
rem写注释. ::也是写注释,区别是rem的注释在回显是可见的,而::不可见.
pause暂停,提示press any key to continue...
call可以从一个批处理调用另一个批处理而不终止父处理.
start调用外部程序命令,所有dos和命令行程序都可以调用.参数min可以让程序最小化,wait会等待调用的程序结束
goto可以跳转到指定标签,配合:来声明标签.
set设置变量,例如set a = ABC赋值之后再 echo %a% 会输出ABC. set b = 等号后面没值就是删除变量, /a 可以赋值数学运算 /p是使用外部输入.
使用@前缀会隐藏命令
>或者>>重定向到输出设备,默认是显示器,可以定位到指定文件.使用>时,如果文件不存在会创建文件并写入内容,存在会先清空文件再重新写入.>>在文件存在时采用追加而不是覆盖操作.
	注意输出数字时后面要加上空格.
<可以重定向信息来源,默认从显示器读取信息.
管道符号|.会将管道符号前面的命令结果重定向到后面命令中去.
删除文件时加/p会出现是否删除的确认内容.
转义符号^可以把特殊字符一般化.
逻辑运算符 & && ||. 可以用&连接多条命令,顺序全部执行. 使用&&连接时,会等待前面执行成功再执行后面,失败不再执行后续. ||连接时,前面失败才执行后面.
IF: 可以进行字符串笔记 if </i> <not> str1 比较符号 str2 XXX  else XXX 其中/i用来设置是否区分大小写, 比较符号包括EQU/==[等于] NEQ[不等] LSS[小于] LEQ[小于等于] GTR[大于] GEQ[大于等于]
	进行存在判断 if <not> exist 文件 XXX else XXX 多行书写时注意格式,和普通括号规则一样.
	进行定义判断 if <not> defined 变量 XXX else XXX 判断一个变量是否存在
	执行结果判断 if errorlevel 1 XXX else XXX 如果失败就执行XXX
FOR: 进行循环操作, 无开关模式: for %%变量 in 集合 do XXX. %%是批处理的书写格式,dos[cmd]写作%.
	L开关[计数循环] for /l %%变量 in (start, step, end) do XXX. 控制了循环的次数,小于等于结束值才进入循环,end小于start时可以设置step为负数.
	F开关 for /f <"option"> %%变量 in 集合 do XXX. 操作字符串时集合为字符串,操作命令是集合为命令,访问 硬盘ascii码时集合为文件集合.
		其中option可以是 eol=c skip=n delims=xx tokens=x,y,m-n usebackq中的一个或者多个.
	D/R开关[遍历/递归] 操作目录或者文件 !变量是%变量的强化版, %值取出第一次赋值的值,刷新需要开启延迟开关 setlocal enabledelayedexpansion.
处理字符串:截取字符串[变量:~起点,截取数量  意为从起点开始截取多少位][a:~-5是从后往前截取5位, a:~0,-5是从第一位截取到倒数第5位]